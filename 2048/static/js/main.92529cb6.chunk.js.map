{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Square","props","COLOR_GRADIENT","cellStyle","backgroundColor","this","value","Math","log2","color","fontSize","className","style","React","Component","Board","renderSquare","bind","i","j","board","key","length","map","boardRow","square","EndGameScreen","status","endGameStyle","width","screenLength","height","endGame","ControlPanel","icon","faArrowAltCircleUp","size","onClick","clickHandler","faArrowAltCircleLeft","faArrowAltCircleRight","faArrowAltCircleDown","unflat","flatBoard","boardSize","sqrt","Array","fill","x","ind","slice","generateSquare","flat","includes","zeroInds","push","floor","random","rotateBoardCcw","times","n","newBoard","tmp","App","BOARD_SIZE","keydown","state","inTransit","moveHandler","keydownAction","keyupAction","generateSquareAction","restart","move","filter","k","makeMoveLeft","hasChanged","board1","board2","sameBoard","makeMove","setState","e","keyPressed","validKeys","indexOf","winner","checkEndGame","document","addEventListener","setTimeout","removeEventListener","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92529cb6.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleUp, faArrowAltCircleDown,\n  faArrowAltCircleLeft, faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\n\nimport './index.css';\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.COLOR_GRADIENT = [\"#FFFF00\", \"#FFE500\", \"#FFCC00\", \"#FFB200\", \"#FF9900\",\n                            \"#FF7F00\", \"#FF6600\", \"#FF4C00\", \"#FF3200\", \"#FF1900\", \"#FF0000\"];\n  }\n\n  render() {\n    var cellStyle = {\n      backgroundColor: (this.props.value > 0) ? this.COLOR_GRADIENT[Math.log2(this.props.value) - 1] : \"#DDDDDD\",\n      color: (this.props.value > 32) ? \"#FFFFFF\" : \"#000000\",\n      fontSize: \"200%\"\n    };\n    return (\n      <span className=\"square\" style={cellStyle}>\n        {this.props.value > 0 ? this.props.value : \"\"}\n      </span>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderSquare = this.renderSquare.bind(this);\n  }\n\n  renderSquare(i, j) {\n    return (\n      <Square\n        value={this.props.board[i][j]} key={i * this.props.board.length + j}\n      />\n    );\n  }\n\n  render() {\n    \n    return (\n      <div>\n        {this.props.board.map((boardRow, i) => {\n          return <div className=\"board-row\" key={i}>\n           {boardRow.map((square, j) => this.renderSquare(i, j))}\n           </div>\n        })}\n      </div>\n    );\n  }\n}\n\nclass EndGameScreen extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {    \n    const endGameStyle = { \n      width: this.props.screenLength, \n      height: this.props.screenLength,\n    };\n    var status;\n    if (this.props.endGame === 1) {\n      status = 'You win!';\n    } else if (this.props.endGame === -1) { \n      status = 'You lose!';\n    }\n\n    if (this.props.endGame) {\n      return (<div className=\"game-endgame\" style={endGameStyle}>\n        {status}\n      </div>);\n    }\n    else return false;\n  }\n\n}\n\nclass ControlPanel extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    return (<table>\n      <thead></thead>\n      <tbody>\n        <tr>\n          <td></td>\n          <td>\n            <FontAwesomeIcon className=\"arrow-key\" icon={faArrowAltCircleUp} size=\"7x\"\n                 onClick={ () => this.props.clickHandler(1) } />\n          </td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>\n            <FontAwesomeIcon className=\"arrow-key\" icon={faArrowAltCircleLeft} size=\"7x\"\n                 onClick={ () => this.props.clickHandler(0) } />\n          </td>\n          <td></td>\n          <td>\n            <FontAwesomeIcon className=\"arrow-key\" icon={faArrowAltCircleRight} size=\"7x\"\n                 onClick={ () => this.props.clickHandler(2) } />\n          </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>\n            <FontAwesomeIcon className=\"arrow-key\" icon={faArrowAltCircleDown} size=\"7x\"\n                 onClick={ () => this.props.clickHandler(3) } />\n          </td>\n        </tr>\n      </tbody>\n    </table>);\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.BOARD_SIZE = 4;\n    this.keydown = false;\n    // this.testBoard = [[1024, 1024, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    this.state = {\n      board: generateSquare(new Array(this.BOARD_SIZE).fill(new Array(this.BOARD_SIZE).fill(0))),\n      // board: this.testBoard,\n      endGame: 0,  // whether the current game is over\n      inTransit: false,  // whether the state of display is in the middle of transit\n    };\n\n    // bind the event handlers\n    this.moveHandler = this.moveHandler.bind(this);\n    this.keydownAction = this.keydownAction.bind(this);\n    this.keyupAction = this.keyupAction.bind(this);\n    this.generateSquareAction = this.generateSquareAction.bind(this);\n    this.restart = this.restart.bind(this);\n  }\n\n  moveHandler(ind) {\n    if (!this.state.endGame && !this.state.inTransit) {\n      var [newBoard, hasChanged] = makeMove(this.state.board, ind);\n      this.setState({\n        board: newBoard,\n        inTransit: hasChanged,\n      });\n    }\n  }\n\n  keydownAction(e) {\n    if (!this.state.endGame && !this.state.inTransit && !this.keydown) {\n      this.keydown = true;\n      var keyPressed = e.key;\n      var validKeys = [\"ArrowLeft\", \"ArrowUp\", \"ArrowRight\", \"ArrowDown\"];\n      if (validKeys.includes(keyPressed)) {\n        this.moveHandler(validKeys.indexOf(keyPressed));\n      }\n    }\n  }\n\n  keyupAction(e) {\n    this.keydown = false;\n  }\n\n  generateSquareAction() {\n    var newBoard = generateSquare(this.state.board);\n    var winner = checkEndGame(newBoard);\n    this.setState({\n      board: newBoard,\n      endGame: winner,\n      inTransit: false,\n    });\n  }\n\n  restart(){\n    this.setState({\n      board: generateSquare(new Array(this.BOARD_SIZE).fill(new Array(this.BOARD_SIZE).fill(0))),\n      endGame: 0,\n      inTransit: false,\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keydownAction);\n    document.addEventListener(\"keyup\", this.keyupAction);\n  }\n  \n  componentDidUpdate() {\n    if (this.state.inTransit) {\n      setTimeout(this.generateSquareAction, 350);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keydownAction);\n    document.removeEventListener(\"keyup\", this.keyupAction);\n  }\n  \n  render() {\n    var screenLength = 100 * this.state.board.length + 4 * (this.state.board.length + 1);\n    return (\n        <div className=\"game\">\n            <div className=\"game-info\">\n                <h1>Simple 2048</h1>\n                <div className=\"game-row\">\n                    <div className=\"game-board\">\n                        <Board board={ this.state.board } />\n                    </div>\n                    <EndGameScreen endGame={ this.state.endGame } screenLength={ screenLength } />\n                    <div className=\"game-control\">\n                      <ControlPanel clickHandler={ this.moveHandler } />\n                    </div>\n                </div>\n                <div className=\"game-reset\">\n                    <p><button className=\"reset-button\" onClick = { this.restart }>Restart</button></p>\n                </div>\n            </div>\n        </div>\n    );\n  }\n                \n}\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\n\n/* helper functions */\n\nfunction checkEndGame(board) {\n  /**\n   * return 1 for a win, -1 for a lose and 0 for not game over\n   */\n  var n = board.length;\n  if (board.flat().includes(2048)) return 1;\n  if (board.flat().includes(0)) return 0;\n  for (var i=0; i < n - 1; i++) {\n    for (var j=0; j < n - 1; j++) {\n      if (board[i][j] === board[i][j+1] || board[i][j] === board[i+1][j]) return 0;\n    }\n    if (board[n-1][i] === board[n-1][i+1] || board[i][n-1] === board[i+1][n-1]) return 0;\n  }\n  return -1;\n}\n\nfunction unflat(flatBoard) {\n  /** \n   * Pass an array of length n^2, pack it into a square board.\n   */\n  var boardSize = Math.sqrt(flatBoard.length);\n  var board = new Array(boardSize).fill(0).map((x, ind) => {\n    return flatBoard.slice(ind * boardSize, (ind + 1) * boardSize);\n  });\n  return board;\n}\n\nfunction generateSquare(board) {\n  /** \n   * Generate a new tile of either 2 or 4 on an empty square. \n  * Generate nothing if there are no empty squares.\n  */\n  var flatBoard = board.flat();\n  if (!flatBoard.includes(0)) return unflat(flatBoard);\n  var zeroInds = [];\n  for (var i = 0; i < flatBoard.length; i++) {\n    if (flatBoard[i] === 0) zeroInds.push(i);\n  }\n  var randInd = zeroInds[Math.floor(Math.random() * zeroInds.length)];\n  flatBoard[randInd] = Math.random() > 0.75 ? 4 : 2;\n  return unflat(flatBoard);\n}\n\nfunction rotateBoardCcw(board, times) {\n  /**\n   * Rotate the board counter-clockwise for a given times.\n   * Note that it is O(n^2) complexity.\n   */\n  times %= 4;\n  var n = board.length;\n  var newBoard = unflat(board.flat());\n  while (times > 0) {\n    for (var i = 0; i < n / 2; i++) {\n      for (var j = i; j < n - i - 1; j++) {\n          var tmp = newBoard[i][j];\n          newBoard[i][j] = newBoard[j][n-i-1];\n          newBoard[j][n-i-1] = newBoard[n-i-1][n-j-1];\n          newBoard[n-i-1][n-j-1] = newBoard[n-j-1][i];\n          newBoard[n-j-1][i] = tmp;\n      }\n    }\n    times--;\n  }\n  return newBoard;\n}\n\nfunction makeMoveLeft(board) {\n  /**\n   * Make the move if left is pressed. Return a new board.\n   */\n  var n = board.length;\n  var newBoard = new Array(n);\n  for (var i = 0; i < n; i++) {\n    // first kill of all the left zeros\n    var boardRow = board[i].filter(x => x > 0);\n    while (boardRow.length < n) {\n      boardRow.push(0);\n    }\n    for (var j = 0; j < n-1; j++) {\n      if (boardRow[j] === 0) break;\n      // merge cells if possible\n      if (boardRow[j] === boardRow[j+1]) {\n        boardRow[j] = boardRow[j] + boardRow[j+1];\n        // shift cells to the left after merging\n        if (j !== n-2) {\n          for (var k = j+1; k < n-1; k++) {\n            boardRow[k] = boardRow[k+1];\n          }\n        }\n        boardRow[n-1] = 0;\n      }\n    }\n    newBoard[i] = boardRow;\n  }\n  return newBoard;\n}\n\nfunction sameBoard(board1, board2) {\n  /**\n   * Check if two boards have the same entries.\n   * Assume board1 and board2 are squares of the same dimension.\n   */\n  for (var i = 0; i < board1.length; i++) {\n    for (var j = 0; j < board1.length; j++) {\n      if (board1[i][j] !== board2[i][j]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction makeMove(board, move) {\n  /**\n   * Make a move. First rotate the board a suitable number of times,\n   * so that the move becomes left. Make that move and then rotate back.\n   * Also return if the board has changed after move.\n   */\n  var newBoard = rotateBoardCcw(board, move);\n  newBoard = makeMoveLeft(newBoard);\n  newBoard = rotateBoardCcw(newBoard, 4 - move);\n  var hasChanged = sameBoard(board, newBoard);\n  return [newBoard, hasChanged];\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}